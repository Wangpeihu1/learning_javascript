ML 是对 HTML 的补充。
XML 不会替代 HTML。在大多数 Web 应用程序中，XML 用于传输数据，而 HTML 用于格式化并显示数据。
对 XML 最好的描述是：
	XML 是独立于软件和硬件的信息传输工具。

XML 用途
	XML 把数据从 HTML 分离
	XML 简化数据共享
	XML 简化数据传输
	XML 简化平台变更
	XML 用于创建新的互联网语言
		很多新的互联网语言是通过 XML 创建的。
		这里有一些实例：
		XHTML
		用于描述可用的 Web 服务 的 WSDL
		作为手持设备的标记语言的 WAP 和 WML
		用于新闻 feed 的 RSS 语言
		描述资本和本体的 RDF 和 OWL
		用于描述针对 Web 的多媒体 的 SMIL

XML 文档形成了一种树结构，它从"根部"开始，然后扩展到"枝叶"。
树结构是通常被称为 XML 树，并且可以很容易地描述任何 XML 文档。 
通过采用树状结构，你可以知道所有从根开始的后续的分行及支行。

XML语法
	所有的 XML 元素都必须有一个关闭标签
	XML 标签对大小写敏感
	XML 必须正确嵌套
	XML 文档必须有根元素
	XML 属性值必须加引号
	实体引用
		在 XML 中，一些字符拥有特殊的意义。
		如果您把字符 "<" 放在 XML 元素中，会发生错误，这是因为解析器会把它当作新元素的开始。
		为了避免这个错误，请用实体引用来代替 "<" 字符：
		在 XML 中，有 5 个预定义的实体引用：
		&lt;	<	less than
		&gt;	>	greater than
		&amp;	&	ampersand
		&apos;	'	apostrophe
		&quot;	"	quotation mark
	XML 中的注释
		在 XML 中编写注释的语法与 HTML 的语法很相似。
		<!-- This is a comment -->
	在 XML 中，空格会被保留
	XML 以 LF 存储换行

XML 元素指的是从（且包括）开始标签直到（且包括）结束标签的部分。
	一个元素可以包含：
	其他元素
	文本
	属性
	或混合以上所有.

XML 命名规则
	XML 元素必须遵循以下命名规则：
	名称可以包含字母、数字以及其他的字符
	名称不能以数字或者标点符号开始
	名称不能以字母 xml（或者 XML、Xml 等等）开始
	名称不能包含空格
	可使用任何名称，没有保留的字词。

XML 元素是可扩展的

XML元素具有属性，类似 HTML。
	属性（Attribute）提供有关元素的额外信息。
	XML 属性必须加引号

避免 XML 属性？
	因使用属性而引起的一些问题：
	属性不能包含多个值（元素可以）
	属性不能包含树结构（元素可以）
	属性不容易扩展（为未来的变化）
	属性难以阅读和维护。请尽量使用元素来描述数据。而仅仅使用属性来提供与数据无关的信息。
元数据（有关数据的数据）应当存储为属性，而数据本身应当存储为元素。
以下是总结性的 XML 属性需要遵循的规则:
	属性名称不能在同一起始标签或空元素标签中出现一次
	一个属性必须使用属性表声明的文档类型定义(DTD)的声明
	属性值不能包含直接或间接的实体引用外部实体
	任何实体的替换文本称为直接或间接的属性值中不能包含任何小于号

XML 验证
	DTD 为英文Document Type Definition，中文意思为“文档类型定义”。
	拥有正确语法的 XML 被称为"形式良好"的 XML。
	通过 DTD 验证的XML是"合法"的 XML。

使用 XSLT 显示 XML
	XSLT 是首选的 XML 样式表语言。
	XSLT（eXtensible Stylesheet Language Transformations）远比 CSS 更加完善。
	XSLT 是在浏览器显示 XML 文件之前，先把它转换为 HTML：

XML DOM
	XML 的基础是文档对象模型（DOM），一个 DOM 文档是一组层次组织的节点或信息块，通过这个层次结构开发人员可以在导航树中寻找特定信息。
	DOM（Document Object Model 文档对象模型）定义了访问和操作文档的标准方法。
	XML DOM（XML Document Object Model）定义了访问和操作 XML 文档的标准方法。
	XML DOM 把 XML 文档作为树结构来查看。
	所有元素可以通过 DOM 树来访问。可以修改或删除它们的内容，并创建新的元素。元素，它们的文本，以及它们的属性，都被认为是节点。